!@encoding CP949

model manpower
  options noimplicit
  uses "mmxprs"
  ! uses "mminsight" ! uncomment this line for an Xpress Insight model

  declarations
    ! 66 is the supremum, but to find the value,
    ! reduce it to 33. (assuming)
    ! if the assumed optimal value is not equal to 33, it is the real optimal value.
    x : array(1..8, 0..33) of mpvar
    y : array(1..8, 0..32) of mpvar
    z : array(1..8, 0..32) of mpvar
    a : array(0..33) of mpvar
    b : array(1..10, 0..32) of mpvar
    c : array(1..8, 0..32) of mpvar
    M : integer
    day : integer
    d : array(1..8) of integer

    Objective:linctr
  end-declarations
  
  initialisations from "Data/or1_project.txt"
		d
	end-initialisations
  
  ! sufficiently large integer
  M := 999
  
  !integer optimisation
  forall(p in 1..8) do
    forall(q in 0..33) do
      x(p,q) is_integer
      if q <=32 then
        y(p,q) is_binary
        z(p,q) is_binary
        c(p,q) is_binary
      end-if
    end-do
  end-do
  
  forall(q in 0..33) do
    a(q) is_binary
  end-do
  
  !1->2, 1->3, 2->4, 2->5, 3->5, 3->6,
  !4->8, 5->7, 6->8, 7->8 ; hierarchy
  forall(p in 1..10) do
    forall(q in 0..32) do
      b(p,q) is_binary
    end-do
  end-do
  
  !all-round working worker
  forall(q in 0..33) do
    sum(p in 1..8) x(p,q) = 10
  end-do
  
  !#1 condition
  forall(q in 0..32) do
    x(1,q) <= M*y(1,q)
    1-x(1,q+1) <= M*(2-y(1,q)-z(1,q))
    d(1)-sum(k in 0..q) x(1,k) <= M*z(1,q)
    sum(k in 0..q) x(1,k) - d(1) + 1 <= M*c(1,q)
    sum(k in (q+1)..33) x(1,k) <= M*(1-c(1,q))
  end-do
  
  !#2 condition
  forall(q in 0..32) do
    x(2,q) <= M*y(2,q)
    1-x(2,q+1) <= M*(2-y(2,q)-z(2,q))
    d(2)-sum(k in 0..q) x(2,k) <= M*z(2,q)
    sum(k in 0..q) x(2,k) - d(2) + 1 <= M*c(2,q)
    sum(k in (q+1)..33) x(2,k) <= M*(1-c(2,q))
  end-do
  
  !#3 condition
  forall(q in 0..32) do
    x(3,q) <= M*y(3,q)
    1-x(3,q+1) <= M*(2-y(3,q)-z(3,q))
    d(3)-sum(k in 0..q) x(3,k) <= M*z(3,q)
    sum(k in 0..q) x(3,k) - d(3) + 1 <= M*c(3,q)
    sum(k in (q+1)..33) x(3,k) <= M*(1-c(3,q))
  end-do
  
  !#4 condition
  forall(q in 0..32) do
    x(4,q) <= M*y(4,q)
    1-x(4,q+1) <= M*(2-y(4,q)-z(4,q))
    d(4)-sum(k in 0..q) x(4,k) <= M*z(4,q)
    sum(k in 0..q) x(4,k) - d(4) + 1 <= M*c(4,q)
    sum(k in (q+1)..33) x(4,k) <= M*(1-c(4,q))
  end-do
  
  !#5 condition
  forall(q in 0..32) do
    x(5,q) <= M*y(5,q)
    1-x(5,q+1) <= M*(2-y(5,q)-z(5,q))
    d(5)-sum(k in 0..q) x(5,k) <= M*z(5,q)
    sum(k in 0..q) x(5,k) - d(5) + 1 <= M*c(5,q)
    sum(k in (q+1)..33) x(5,k) <= M*(1-c(5,q))
  end-do
  
  !#6 condition
  forall(q in 0..32) do
    x(6,q) <= M*y(6,q)
    1-x(6,q+1) <= M*(2-y(6,q)-z(6,q))
    d(6)-sum(k in 0..q) x(6,k) <= M*z(6,q)
    sum(k in 0..q) x(6,k) - d(6) + 1 <= M*c(6,q)
    sum(k in (q+1)..33) x(6,k) <= M*(1-c(6,q))
  end-do
  
  !#7 condition
  forall(q in 0..32) do
    x(7,q) <= M*y(7,q)
    1-x(7,q+1) <= M*(2-y(7,q)-z(7,q))
    d(7)-sum(k in 0..q) x(7,k) <= M*z(7,q)
    sum(k in 0..q) x(7,k) - d(7) + 1 <= M*c(7,q)
    sum(k in (q+1)..33) x(7,k) <= M*(1-c(7,q))
  end-do
  
  !#8 condition
  forall(q in 0..32) do
    x(8,q) <= M*y(8,q)
    1-x(8,q+1) <= M*(2-y(8,q)-z(8,q))
    d(8)-sum(k in 0..q) x(8,k) <= M*z(8,q)
  end-do
  
  forall(q in 0..33) do
    a(q) <= M*x(8,q)
    (1/M)*x(8,q) <= a(q)
  end-do
  
  !1->2,3 condition
  forall(q in 0..32) do
    d(1)-sum(k in 0..q) x(1,k) <= M*b(1,q)
    d(1)-sum(k in 0..q) x(1,k) <= M*b(2,q)
    sum(k in 0..q+1) x(2,k) <= M*(1-b(1,q))
    sum(k in 0..q+1) x(3,k) <= M*(1-b(2,q))
  end-do
  
  !2->4,5 condition
  forall(q in 0..32) do
    d(2)-sum(k in 0..q) x(2,k) <= M*b(3,q)
    d(2)-sum(k in 0..q) x(2,k) <= M*b(4,q)
    sum(k in 0..q+1) x(4,k) <= M*(1-b(3,q))
    sum(k in 0..q+1) x(5,k) <= M*(1-b(4,q))
  end-do
  
  !3->5,6 condition
  forall(q in 0..32) do
    d(3)-sum(k in 0..q) x(3,k) <= M*b(5,q)
    d(3)-sum(k in 0..q) x(3,k) <= M*b(6,q)
    sum(k in 0..q+1) x(5,k) <= M*(1-b(5,q))
    sum(k in 0..q+1) x(6,k) <= M*(1-b(6,q))
  end-do
  
  !4->8 condition
  forall(q in 0..32) do
    d(4)-sum(k in 0..q) x(4,k) <= M*b(7,q)
    sum(k in 0..q+1) x(8,k) <= M*(1-b(7,q))
  end-do
  
  !5->7 condition
  forall(q in 0..32) do
    d(5)-(sum(k in 0..q) x(5,k)) <= M*b(8,q)
    sum(k in 0..q+1) x(7,k) <= M*(1-b(8,q))
  end-do
  
  !6->8 condition
  forall(q in 0..32) do
    d(6)-sum(k in 0..q) x(6,k) <= M*b(9,q)
    sum(k in 0..(q+1)) x(8,k) <= M*(1-b(9,q))
  end-do
  
  !7->8 condition
  forall(q in 0..32) do
    d(7)-sum(k in 0..q) x(7,k) <= M*b(10,q)
    sum(k in 0..(q+1)) x(8,k) <= M*(1-b(10,q))
  end-do
  
  Objective := sum(q in 0..33) a(q)

  maximise(Objective)
  
  writeln("Minimal value of manpower dist problem : ", 34-getobjval+ceil(d(8)/10), " days") ! 9 days
  
  writeln("")
  
  forall(p in 1..8) do
    forall(q in 0..8) do
      write(getsol(x(p,q))," ")
    end-do
    writeln("")
  end-do
end-model
